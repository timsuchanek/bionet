{
	"constructor": "lychee.Environment",
	"arguments": [
		{
			"id": "biolib/html/client",
			"build": "game.net.Client",
			"debug": false,
			"sandbox": false,
			"type": "build",
			"tags": {
				"platform": [
					"html"
				]
			}
		}
	],
	"blob": {
		"definitions": {
			"game.net.Client": {
				"constructor": "lychee.Definition",
				"arguments": [
					"game.net.Client"
				],
				"blob": {
					"requires": [
						"lychee.data.BitON",
						"game.ui.Dropzone",
						"game.net.client.File"
					],
					"includes": [
						"lychee.net.Client"
					],
					"exports": "function (lychee, game, global, attachments) {\n\n  var _BitON = lychee.data.BitON;\n  var _file  = game.net.client.File;\n\n\n  var Class = function(data, main) {\n\n    var settings = lychee.extend({\n      codec:     _BitON,\n      reconnect: 10000\n    }, data);\n\n\n    lychee.net.Client.call(this, settings);\n\n\n\n    /*\n     * INITIALIZATION\n     */\n\n    this.bind('connect', function() {\n\n      this.addService(new _file(this));\n\n      if (lychee.debug === true) {\n        console.log('(BioNET) game.net.Client: Remote connected');\n      }\n\n    }, this);\n\n    this.bind('disconnect', function(code) {\n\n      if (lychee.debug === true) {\n        console.log('(BioNET) game.net.Client: Remote disconnected (' + code + ')');\n      }\n\n    }, this);\n\n\n    this.connect();\n\n  };\n\n\n  Class.prototype = {\n\n  };\n\n\n  return Class;\n\n}"
				}
			},
			"lychee.net.Client": {
				"constructor": "lychee.Definition",
				"arguments": [
					"lychee.net.Client"
				],
				"blob": {
					"tags": {
						"platform": "html"
					},
					"requires": [
						"lychee.data.BitON",
						"lychee.data.JSON"
					],
					"includes": [
						"lychee.net.Tunnel"
					],
					"supports": "function (lychee, global) {\n\n\tif (typeof WebSocket !== 'undefined') {\n\t\treturn true;\n\t}\n\n\n\treturn false;\n\n}",
					"exports": "function (lychee, global, attachments) {\n\n\tvar _BitON = lychee.data.BitON;\n\tvar _JSON  = lychee.data.JSON;\n\n\n\n\t/*\n\t * IMPLEMENTATION\n\t */\n\n\tvar Class = function(data) {\n\n\t\tvar settings = lychee.extend({}, data);\n\n\n\t\tthis.__socket      = null;\n\t\tthis.__isConnected = false;\n\n\n\t\tlychee.net.Tunnel.call(this, settings);\n\n\t\tsettings = null;\n\n\n\n\t\t/*\n\t\t * INITIALIZATION\n\t\t */\n\n\t\tthis.bind('connect', function() {\n\t\t\tthis.__isConnected = true;\n\t\t}, this);\n\n\t\tthis.bind('disconnect', function() {\n\t\t\tthis.__isConnected = false;\n\t\t}, this);\n\n\t\tthis.bind('send', function(blob) {\n\n\t\t\tif (this.__socket !== null) {\n\t\t\t\tthis.__socket.send(blob);\n\t\t\t}\n\n\t\t}, this);\n\n\t};\n\n\n\tClass.prototype = {\n\n\t\t/*\n\t\t * ENTITY API\n\t\t */\n\n\t\t// deserialize: function(blob) {},\n\n\t\tserialize: function() {\n\n\t\t\tvar data = lychee.net.Tunnel.prototype.serialize.call(this);\n\t\t\tdata['constructor'] = 'lychee.net.Client';\n\n\n\t\t\treturn data;\n\n\t\t},\n\n\n\n\t\t/*\n\t\t * CUSTOM API\n\t\t */\n\n\t\tconnect: function() {\n\n\t\t\tif (this.__isConnected === false) {\n\n\t\t\t\tvar that = this;\n\n\n\t\t\t\tthis.__socket = new WebSocket('ws://' + this.host + ':' + this.port);\n\n\t\t\t\tthis.__socket.onopen = function() {\n\t\t\t\t\tthat.trigger('connect', []);\n\t\t\t\t};\n\n\t\t\t\tthis.__socket.onmessage = function(event) {\n\t\t\t\t\tthat.receive(event.data);\n\t\t\t\t};\n\n\t\t\t\tthis.__socket.onclose = function(event) {\n\t\t\t\t\tthat.__socket = null;\n\t\t\t\t\tthat.trigger('disconnect', [ event.code || null ]);\n\t\t\t\t};\n\n\n\t\t\t\tif (lychee.debug === true) {\n\t\t\t\t\tconsole.log('lychee.net.Client: Listening on ' + this.host + ':' + this.port);\n\t\t\t\t}\n\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tdisconnect: function() {\n\n\t\t\tif (this.__isConnected === true) {\n\n\t\t\t\tif (this.__socket !== null) {\n\t\t\t\t\tthis.__socket.close();\n\t\t\t\t}\n\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}\n\n\t};\n\n\n\treturn Class;\n\n}"
				}
			},
			"lychee.data.BitON": {
				"constructor": "lychee.Definition",
				"arguments": [
					"lychee.data.BitON"
				],
				"blob": {
					"exports": "function (lychee, global) {\n\n\t/*\n\t * HELPERS\n\t */\n\n\tvar CHAR_TABLE = new Array(256);\n\tfor (var c = 0; c < 256; c++) {\n\t\tCHAR_TABLE[c] = String.fromCharCode(c);\n\t}\n\n\n\tvar MASK_TABLE = new Array(9);\n\tvar POW_TABLE  = new Array(9);\n\tvar RPOW_TABLE = new Array(9);\n\tfor (var m = 0; m < 9; m++) {\n\t\tPOW_TABLE[m]  = Math.pow(2, m) - 1;\n\t\tMASK_TABLE[m] = ~(POW_TABLE[m] ^ 0xff);\n\t\tRPOW_TABLE[m] = Math.pow(10, m);\n\t}\n\n\n\tvar _resolve_constructor = function(identifier, scope) {\n\n\t\tvar pointer = scope;\n\n\t\tvar ns = identifier.split('.');\n\t\tfor (var n = 0, l = ns.length; n < l; n++) {\n\n\t\t\tvar name = ns[n];\n\n\t\t\tif (pointer[name] !== undefined) {\n\t\t\t\tpointer = pointer[name];\n\t\t\t} else {\n\t\t\t\tpointer = null;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn pointer;\n\n\t};\n\n\n\n\tvar _Stream = function(buffer, mode) {\n\n\t\tthis.__buffer    = typeof buffer === 'string' ? buffer : '';\n\t\tthis.__mode      = typeof mode === 'number'   ? mode   : 0;\n\n\t\tthis.__pointer   = 0;\n\t\tthis.__value     = 0;\n\t\tthis.__remaining = 8;\n\t\tthis.__index     = 0;\n\n\t\tif (this.__mode === _Stream.MODE.read) {\n\t\t\tthis.__value = this.__buffer.charCodeAt(this.__index);\n\t\t}\n\n\t};\n\n\n\t_Stream.MODE = {\n\t\tread:  0,\n\t\twrite: 1\n\t};\n\n\n\t_Stream.prototype = {\n\n\t\ttoString: function() {\n\n\t\t\tif (this.__mode === _Stream.MODE.write) {\n\n\t\t\t\tif (this.__value > 0) {\n\t\t\t\t\tthis.__buffer += CHAR_TABLE[this.__value];\n\t\t\t\t\tthis.__value   = 0;\n\t\t\t\t}\n\n\n\t\t\t\t// 0: Boolean or Null or EOS\n\t\t\t\tthis.write(0, 3);\n\t\t\t\t// 00: EOS\n\t\t\t\tthis.write(0, 2);\n\n\t\t\t}\n\n\t\t\treturn this.__buffer;\n\n\t\t},\n\n\t\tpointer: function() {\n\t\t\treturn this.__pointer;\n\t\t},\n\n\t\tlength: function() {\n\t\t\treturn this.__buffer.length * 8;\n\t\t},\n\n\t\tread: function(bits) {\n\n\t\t\tvar overflow = bits - this.__remaining;\n\t\t\tvar captured = this.__remaining < bits ? this.__remaining : bits;\n\t\t\tvar shift    = this.__remaining - captured;\n\n\n\t\t\tvar buffer = (this.__value & MASK_TABLE[this.__remaining]) >> shift;\n\n\n\t\t\tthis.__pointer   += captured;\n\t\t\tthis.__remaining -= captured;\n\n\n\t\t\tif (this.__remaining === 0) {\n\n\t\t\t\tthis.__value      = this.__buffer.charCodeAt(++this.__index);\n\t\t\t\tthis.__remaining  = 8;\n\n\t\t\t\tif (overflow > 0) {\n\t\t\t\t\tbuffer = buffer << overflow | ((this.__value & MASK_TABLE[this.__remaining]) >> (8 - overflow));\n\t\t\t\t\tthis.__remaining -= overflow;\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn buffer;\n\n\t\t},\n\n\t\treadRAW: function(bytes) {\n\n\t\t\tif (this.__remaining !== 8) {\n\n\t\t\t\tthis.__index++;\n\t\t\t\tthis.__value     = 0;\n\t\t\t\tthis.__remaining = 8;\n\n\t\t\t}\n\n\n\t\t\tvar buffer = '';\n\n\t\t\tif (this.__remaining === 8) {\n\n\t\t\t\tbuffer        += this.__buffer.substr(this.__index, bytes);\n\t\t\t\tthis.__index  += bytes;\n\t\t\t\tthis.__value   = this.__buffer.charCodeAt(this.__index);\n\n\t\t\t}\n\n\n\t\t\treturn buffer;\n\n\t\t},\n\n\t\twrite: function(buffer, bits) {\n\n\t\t\tvar overflow = bits - this.__remaining;\n\t\t\tvar captured = this.__remaining < bits ? this.__remaining : bits;\n\t\t\tvar shift    = this.__remaining - captured;\n\n\n\t\t\tif (overflow > 0) {\n\t\t\t\tthis.__value += buffer >> overflow << shift;\n\t\t\t} else {\n\t\t\t\tthis.__value += buffer << shift;\n\t\t\t}\n\n\n\t\t\tthis.__pointer   += captured;\n\t\t\tthis.__remaining -= captured;\n\n\n\t\t\tif (this.__remaining === 0) {\n\n\t\t\t\tthis.__buffer    += CHAR_TABLE[this.__value];\n\t\t\t\tthis.__remaining  = 8;\n\t\t\t\tthis.__value      = 0;\n\n\t\t\t\tif (overflow > 0) {\n\t\t\t\t\tthis.__value     += (buffer & POW_TABLE[overflow]) << (8 - overflow);\n\t\t\t\t\tthis.__remaining -= overflow;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\twriteRAW: function(buffer) {\n\n\t\t\tif (this.__remaining !== 8) {\n\n\t\t\t\tthis.__buffer   += CHAR_TABLE[this.__value];\n\t\t\t\tthis.__value     = 0;\n\t\t\t\tthis.__remaining = 8;\n\n\t\t\t}\n\n\t\t\tif (this.__remaining === 8) {\n\n\t\t\t\tthis.__buffer  += buffer;\n\t\t\t\tthis.__pointer += buffer.length * 8;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\n\n\t/*\n\t * ENCODER and DECODER\n\t */\n\n\tvar _encode = function(stream, data) {\n\n\t\t// 0: Boolean or Null or EOS\n\t\tif (typeof data === 'boolean' || data === null) {\n\n\t\t\tstream.write(0, 3);\n\n\t\t\tif (data === null) {\n\t\t\t\tstream.write(1, 2);\n\t\t\t} else if (data === false) {\n\t\t\t\tstream.write(2, 2);\n\t\t\t} else if (data === true) {\n\t\t\t\tstream.write(3, 2);\n\t\t\t}\n\n\n\t\t// 1: Integer, 2: Float\n\t\t} else if (typeof data === 'number') {\n\n\t\t\tvar type = 1;\n\t\t\tif (data < 268435456 && data !== (data | 0)) {\n\t\t\t\ttype = 2;\n\t\t\t}\n\n\n\t\t\tstream.write(type, 3);\n\n\n\t\t\t// Negative value\n\t\t\tvar sign = 0;\n\t\t\tif (data < 0) {\n\t\t\t\tdata = -data;\n\t\t\t\tsign = 1;\n\t\t\t}\n\n\n\t\t\t// Float only: Calculate the integer value and remember the shift\n\t\t\tvar shift = 0;\n\n\t\t\tif (type === 2) {\n\n\t\t\t\tvar step = 10;\n\t\t\t\tvar m    = data;\n\t\t\t\tvar tmp  = 0;\n\n\n\t\t\t\t// Calculate the exponent and shift\n\t\t\t\tdo {\n\n\t\t\t\t\tm     = data * step;\n\t\t\t\t\tstep *= 10;\n\t\t\t\t\ttmp   = m | 0;\n\t\t\t\t\tshift++;\n\n\t\t\t\t} while (m - tmp > 1 / step && shift < 8);\n\n\n\t\t\t\tstep = tmp / 10;\n\n\t\t\t\t// Recorrect shift if we are > 0.5\n\t\t\t\t// and shift is too high\n\t\t\t\tif (step === (step | 0)) {\n\t\t\t\t\ttmp = step;\n\t\t\t\t\tshift--;\n\t\t\t\t}\n\n\t\t\t\tdata = tmp;\n\n\t\t\t}\n\n\n\n\t\t\tif (data < 2) {\n\n\t\t\t\tstream.write(0, 4);\n\t\t\t\tstream.write(data, 1);\n\n\t\t\t} else if (data < 16) {\n\n\t\t\t\tstream.write(1, 4);\n\t\t\t\tstream.write(data, 4);\n\n\t\t\t} else if (data < 256) {\n\n\t\t\t\tstream.write(2, 4);\n\t\t\t\tstream.write(data, 8);\n\n\t\t\t} else if (data < 4096) {\n\n\t\t\t\tstream.write(3, 4);\n\t\t\t\tstream.write(data >>  8 & 0xff, 4);\n\t\t\t\tstream.write(data       & 0xff, 8);\n\n\t\t\t} else if (data < 65536) {\n\n\t\t\t\tstream.write(4, 4);\n\t\t\t\tstream.write(data >>  8 & 0xff, 8);\n\t\t\t\tstream.write(data       & 0xff, 8);\n\n\t\t\t} else if (data < 1048576) {\n\n\t\t\t\tstream.write(5, 4);\n\t\t\t\tstream.write(data >> 16 & 0xff, 4);\n\t\t\t\tstream.write(data >>  8 & 0xff, 8);\n\t\t\t\tstream.write(data       & 0xff, 8);\n\n\t\t\t} else if (data < 16777216) {\n\n\t\t\t\tstream.write(6, 4);\n\t\t\t\tstream.write(data >> 16 & 0xff, 8);\n\t\t\t\tstream.write(data >>  8 & 0xff, 8);\n\t\t\t\tstream.write(data       & 0xff, 8);\n\n\t\t\t} else if (data < 268435456) {\n\n\t\t\t\tstream.write(7, 4);\n\t\t\t\tstream.write(data >> 24 & 0xff, 8);\n\t\t\t\tstream.write(data >> 16 & 0xff, 8);\n\t\t\t\tstream.write(data >>  8 & 0xff, 8);\n\t\t\t\tstream.write(data       & 0xff, 8);\n\n\t\t\t} else {\n\n\t\t\t\tstream.write(8, 4);\n\n\t\t\t\t_encode(stream, data.toString());\n\n\t\t\t}\n\n\n\n\t\t\tstream.write(sign, 1);\n\n\n\t\t\t// Float only: Remember the shift for precision\n\t\t\tif (type === 2) {\n\t\t\t\tstream.write(shift, 4);\n\t\t\t}\n\n\n\t\t// 3: String\n\t\t} else if (typeof data === 'string') {\n\n\t\t\tstream.write(3, 3);\n\n\n\t\t\tvar l = data.length;\n\n\t\t\t// Write Size Field\n\t\t\tif (l > 65535) {\n\n\t\t\t\tstream.write(31, 5);\n\n\t\t\t\tstream.write(l >> 24 & 0xff, 8);\n\t\t\t\tstream.write(l >> 16 & 0xff, 8);\n\t\t\t\tstream.write(l >>  8 & 0xff, 8);\n\t\t\t\tstream.write(l       & 0xff, 8);\n\n\t\t\t} else if (l > 255) {\n\n\t\t\t\tstream.write(30, 5);\n\n\t\t\t\tstream.write(l >>  8 & 0xff, 8);\n\t\t\t\tstream.write(l       & 0xff, 8);\n\n\t\t\t} else if (l > 28) {\n\n\t\t\t\tstream.write(29, 5);\n\n\t\t\t\tstream.write(l, 8);\n\n\t\t\t} else {\n\n\t\t\t\tstream.write(l, 5);\n\n\t\t\t}\n\n\n\t\t\tstream.writeRAW(data);\n\n\n\t\t// 4: Start of Array\n\t\t} else if (data instanceof Array) {\n\n\t\t\tstream.write(4, 3);\n\n\t\t\tfor (var d = 0, dl = data.length; d < dl; d++) {\n\t\t\t\tstream.write(0, 3);\n\t\t\t\t_encode(stream, data[d]);\n\t\t\t}\n\n\t\t\t// Write EOO marker\n\t\t\tstream.write(7, 3);\n\n\n\t\t// 5: Start of Object\n\t\t} else if (data instanceof Object && typeof data.serialize !== 'function') {\n\n\t\t\tstream.write(5, 3);\n\n\t\t\tfor (var prop in data) {\n\n\t\t\t\tif (data.hasOwnProperty(prop)) {\n\t\t\t\t\tstream.write(0, 3);\n\t\t\t\t\t_encode(stream, prop);\n\t\t\t\t\t_encode(stream, data[prop]);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Write EOO marker\n\t\t\tstream.write(7, 3);\n\n\n\t\t// 6: Custom High-Level Implementation\n\t\t} else if (data instanceof Object && typeof data.serialize === 'function') {\n\n\t\t\tstream.write(6, 3);\n\n\t\t\tvar blob = lychee.serialize(data);\n\n\t\t\t_encode(stream, blob);\n\n\t\t\t// Write EOO marker\n\t\t\tstream.write(7, 3);\n\n\t\t}\n\n\t};\n\n\n\tvar _decode = function(stream) {\n\n\t\tvar value  = undefined;\n\t\tvar tmp    = 0;\n\t\tvar errors = 0;\n\t\tvar check  = 0;\n\n\t\tif (stream.pointer() < stream.length()) {\n\n\t\t\tvar type = stream.read(3);\n\n\n\t\t\t// 0: Boolean or Null (or EOS)\n\t\t\tif (type === 0) {\n\n\t\t\t\ttmp = stream.read(2);\n\n\t\t\t\tif (tmp === 1) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t} else if (tmp === 2) {\n\t\t\t\t\tvalue = false;\n\t\t\t\t} else if (tmp === 3) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t}\n\n\n\t\t\t// 1: Integer, 2: Float\n\t\t\t} else if (type === 1 || type === 2) {\n\n\t\t\t\ttmp = stream.read(4);\n\n\n\t\t\t\tif (tmp === 0) {\n\n\t\t\t\t\tvalue = stream.read(1);\n\n\t\t\t\t} else if (tmp === 1) {\n\n\t\t\t\t\tvalue = stream.read(4);\n\n\t\t\t\t} else if (tmp === 2) {\n\n\t\t\t\t\tvalue = stream.read(8);\n\n\t\t\t\t} else if (tmp === 3) {\n\n\t\t\t\t\tvalue = (stream.read(4) <<  8) + stream.read(8);\n\n\t\t\t\t} else if (tmp === 4) {\n\n\t\t\t\t\tvalue = (stream.read(8) <<  8) + stream.read(8);\n\n\t\t\t\t} else if (tmp === 5) {\n\n\t\t\t\t\tvalue = (stream.read(4) << 16) + (stream.read(8) <<  8) + stream.read(8);\n\n\t\t\t\t} else if (tmp === 6) {\n\n\t\t\t\t\tvalue = (stream.read(8) << 16) + (stream.read(8) <<  8) + stream.read(8);\n\n\t\t\t\t} else if (tmp === 7) {\n\n\t\t\t\t\tvalue = (stream.read(8) << 24) + (stream.read(8) << 16) + (stream.read(8) <<  8) + stream.read(8);\n\n\t\t\t\t} else if (tmp === 8) {\n\n\t\t\t\t\tvar str = _decode(stream);\n\n\t\t\t\t\tvalue = parseInt(str, 10);\n\n\t\t\t\t}\n\n\n\t\t\t\t// Negative value\n\t\t\t\tvar sign = stream.read(1);\n\t\t\t\tif (sign === 1) {\n\t\t\t\t\tvalue = -1 * value;\n\t\t\t\t}\n\n\n\t\t\t\t// Float only: Shift it back by the precision\n\t\t\t\tif (type === 2) {\n\t\t\t\t\tvar shift = stream.read(4);\n\t\t\t\t\tvalue /= RPOW_TABLE[shift];\n\t\t\t\t}\n\n\n\t\t\t// 3: String\n\t\t\t} else if (type === 3) {\n\n\t\t\t\tvar size = stream.read(5);\n\n\t\t\t\tif (size === 31) {\n\n\t\t\t\t\tsize = (stream.read(8) << 24) + (stream.read(8) << 16) + (stream.read(8) <<  8) + stream.read(8);\n\n\t\t\t\t} else if (size === 30) {\n\n\t\t\t\t\tsize = (stream.read(8) <<  8) + stream.read(8);\n\n\t\t\t\t} else if (size === 29) {\n\n\t\t\t\t\tsize = stream.read(8);\n\n\t\t\t\t}\n\n\n\t\t\t\tvalue = stream.readRAW(size);\n\n\n\t\t\t// 4: Array\n\t\t\t} else if (type === 4) {\n\n\t\t\t\tvalue = [];\n\n\n\t\t\t\twhile (errors === 0) {\n\n\t\t\t\t\tcheck = stream.read(3);\n\n\t\t\t\t\tif (check === 0) {\n\t\t\t\t\t\tvalue.push(_decode(stream));\n\t\t\t\t\t} else if (check === 7) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors++;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t// 5: Object\n\t\t\t} else if (type === 5) {\n\n\t\t\t\tvalue = {};\n\n\n\t\t\t\twhile (errors === 0) {\n\n\t\t\t\t\tcheck = stream.read(3);\n\n\t\t\t\t\tif (check === 0) {\n\t\t\t\t\t\tvalue[_decode(stream)] = _decode(stream);\n\t\t\t\t\t} else if (check === 7) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors++;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t// 6: Custom High-Level Implementation\n\t\t\t} else if (type === 6) {\n\n\t\t\t\tvar blob = _decode(stream);\n\n\t\t\t\tvalue = lychee.deserialize(blob);\n\t\t\t\tcheck = stream.read(3);\n\n\t\t\t\tif (check !== 7) {\n\t\t\t\t\tvalue = undefined;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn value;\n\n\t};\n\n\n\n\t/*\n\t * IMPLEMENTATION\n\t */\n\n\tvar Module = {};\n\n\n\tModule.encode = function(data) {\n\n\t\tvar stream = new _Stream('', _Stream.MODE.write);\n\n\t\t_encode(stream, data);\n\n\t\treturn stream.toString();\n\n\t};\n\n\n\tModule.decode = function(data) {\n\n\t\tvar stream = new _Stream(data, _Stream.MODE.read);\n\n\t\tvar value = _decode(stream);\n\t\tif (value === undefined) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn value;\n\t\t}\n\n\t};\n\n\n\treturn Module;\n\n}"
				}
			},
			"game.ui.Dropzone": {
				"constructor": "lychee.Definition",
				"arguments": [
					"game.ui.Dropzone"
				],
				"blob": {
					"tags": {
						"platform": "html"
					},
					"includes": [
						"lychee.event.Emitter"
					],
					"exports": "function (lychee, game, global, attachments) {\n\n  /*\n   * HELPERS\n   */\n\n  var _MIME = {\n    'fnt':     { type: 'application/json',       constructor: 'Font'    },\n    'js':      { type: 'application/javascript', constructor: 'Buffer'  },\n    'json':    { type: 'application/json',       constructor: 'Config'  },\n    'png':     { type: 'image/png',              constructor: 'Texture' },\n\n    'msc.mp3': { type: 'audio/mp3',              constructor: 'Music'   },\n    'msc.ogg': { type: 'audio/ogg',              constructor: 'Music'   },\n    'snd.mp3': { type: 'audio/mp3',              constructor: 'Sound'   },\n    'snd.ogg': { type: 'audio/ogg',              constructor: 'Sound'   }\n\n  };\n\n  var _refresh_list = function(list) {\n\n    var content = '';\n\n    this.files.forEach(function(file) {\n      content += '<li>' + file.name + '<br><img src=\"' + file.data.url + '\"></li>';\n    });\n\n    list.innerHTML = content.length ? content : '<li class=\"message\">No files selected.</li>';\n\n  };\n\n  var _upload = function(file, mime, list) {\n\n    var construct = mime['constructor'];\n    var instance  = null;\n\n\n    var index, data;\n\n\n    switch(construct) {\n\n      case 'Buffer':\n\n        index = file.buffer.indexOf('base64,');\n\n        if (index !== -1) {\n\n          instance = lychee.deserialize({\n            'constructor': construct,\n            'arguments':   [ file.buffer.substr(index + 7) ]\n          });\n\n        }\n\n      break;\n\n      case 'Config':\n\n        instance = lychee.deserialize({\n          'constructor': construct,\n          'arguments':   [ file.buffer ],\n          'blob':        {\n            buffer: file.buffer\n          }\n        });\n\n      break;\n\n      case 'Font':\n\n        index = file.buffer.indexOf('base64,');\n\n        if (index !== -1) {\n\n          file.buffer = 'data:application/json;base64,' + file.buffer.substr(index + 7);\n\n          instance = lychee.deserialize({\n            'constructor': construct,\n            'arguments':   [ file.buffer ],\n            'blob':        {\n              buffer: file.buffer\n            }\n          });\n\n        }\n\n      break;\n\n      case 'Texture':\n\n        instance = lychee.deserialize({\n          'constructor': construct,\n          'arguments':   [ file.buffer ],\n          'blob':        {\n            buffer: file.buffer\n          }\n        });\n\n      break;\n\n      case 'Music':\n      case 'Sound':\n\n        // TODO: Match given URLs and lazy-fire event?\n        // A.snd.ogg + A.snd.mp3 = new Sound('A.snd');\n\n        data = {\n          'constructor': construct,\n          'arguments':   [ null ],\n          'blob':        {}\n        };\n\n        if (file.name.substr(-3) === 'mp3') {\n          data.blob.buffer = {};\n          data.blob.buffer.mp3 = file.buffer;\n        } else if (file.name.substr(-3) === 'ogg') {\n          data.blob.buffer = {};\n          data.blob.buffer.ogg = file.buffer;\n        }\n\n\n        instance = lychee.deserialize(data);\n\n      break;\n\n    }\n\n\n    if (instance !== null) {\n\n      this.files.push({\n        name: file.name,\n        data: instance\n      });\n\n\n      this.trigger('change', []);\n\n    }\n\n  };\n\n  var _bind_element = function() {\n\n    var element = this.element;\n    if (element !== null) {\n\n      var that   = this;\n      var button = document.createElement('button');\n      var desc   = document.createElement('span');\n      var zone   = document.createElement('div');\n      var list   = document.createElement('ul');\n\n\n      var allowed_extensions = Object.keys(this.extensions).filter(function(ext) {\n        return that.extensions[ext] === true;\n      });\n\n\n      desc.innerHTML = '<b>Drop&nbsp;files&nbsp;here</b><br>(Allowed Types: ' + allowed_extensions.join(',') + ')';\n      zone.appendChild(desc);\n      zone.appendChild(document.createElement('br'));\n\n      button.innerHTML = 'Clear Files';\n      button.onclick   = function() {\n        that.files = [];\n        _refresh_list.call(that, list);\n      };\n      zone.appendChild(button);\n\n      element.className = 'game-ui-Dropzone';\n      element.appendChild(zone);\n\n      list.innerHTML = '<li class=\"message\">No&nbsp;files&nbsp;selected.</li>';\n      element.appendChild(list);\n\n      zone.addEventListener('dragenter', function(event) {\n        event.stopPropagation();\n        event.preventDefault();\n      }, false);\n\n      zone.addEventListener('dragover', function(event) {\n        event.stopPropagation();\n        event.preventDefault();\n      }, false);\n\n      zone.addEventListener('drop', function(event) {\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (event.dataTransfer instanceof Object) {\n\n          var files = [].slice.call(event.dataTransfer.files);\n          if (files.length > 0) {\n\n            files.forEach(function(file) {\n\n              var name    = file.name.split('/').pop();\n              var ext     = [].slice.call(name.split('.'), 1).join('.');\n              var mime    = _MIME[ext] || null;\n              var allowed = that.extensions[ext] === true;\n\n              if (mime !== null && allowed === true) {\n\n                if (file.type === mime.type || file.type === '') {\n\n                  var reader = new FileReader();\n\n                  reader.onload = function(event) {\n\n                    _upload.call(that, {\n                      name:   file.name,\n                      buffer: event.target.result\n                    }, mime);\n\n                    _refresh_list.call(that, list);\n\n                  };\n\n                  reader.readAsDataURL(file);\n\n                }\n\n              }\n\n            });\n\n          }\n\n        }\n\n      }, false);\n\n    }\n\n  };\n\n  var _unbind_element = function() {\n\n    var element = this.element;\n    if (element !== null) {\n\n      element.className = '';\n      element.innerHTML = '';\n\n      element.removeEventListener('dragenter');\n      element.removeEventListener('dragover');\n      element.removeEventListener('drop');\n\n    }\n\n  };\n\n\n\n  /*\n   * IMPLEMENTATION\n   */\n\n  var Class = function(data) {\n\n    var settings = lychee.extend({}, data);\n\n\n    this.element    = null;\n    this.extensions = {\n      'fnt':     true,\n      'js':      true,\n      'json':    true,\n      'png':     true,\n      'msc.mp3': true,\n      'msc.ogg': true,\n      'snd.mp3': true,\n      'snd.ogg': true\n    };\n    this.files      = [];\n\n\n    this.setExtensions(settings.extensions);\n    this.setElement(settings.element);\n\n\n    lychee.event.Emitter.call(this);\n\n    settings = null;\n\n  };\n\n\n  Class.prototype = {\n\n    refresh: function() {\n\n      if (this.element !== null) {\n        _refresh_list.call(this, this.element.querySelector('ul'));\n      }\n\n    },\n\n    setElement: function(element) {\n\n      element = element instanceof HTMLElement ? element : null;\n\n\n      if (element !== null) {\n\n        _unbind_element.call(this);\n        this.element = element;\n        _bind_element.call(this);\n\n\n        return true;\n\n      }\n\n\n      return false;\n\n    },\n\n    setExtensions: function(extensions) {\n\n      extensions = extensions instanceof Object ? extensions : null;\n\n\n      if (extensions !== null) {\n\n        this.extensions = {};\n\n        for (var ext in extensions) {\n\n          var allowed = extensions[ext];\n          if (allowed === true || allowed === false) {\n            this.extensions[ext] = allowed;\n          }\n\n        }\n\n\n        return true;\n\n      }\n\n\n      return false;\n\n    }\n\n  };\n\n\n  return Class;\n\n}"
				}
			},
			"game.net.client.File": {
				"constructor": "lychee.Definition",
				"arguments": [
					"game.net.client.File"
				],
				"blob": {
					"includes": [
						"lychee.net.client.Session"
					],
					"exports": "function (lychee, game, global, attachments) {\n\n  var Class = function(client) {\n\n    var settings = {};\n\n\n    settings.autostart = false;\n    settings.autolock  = false;\n    settings.min       = 2;\n    settings.max       = 256;\n    settings.sid       = 'dropzone';\n\n    lychee.net.client.Session.call(this, 'file', client, settings);\n\n  };\n\n\n  Class.prototype = {\n\n    sendFile: function(file) {\n\n      var data = {\n        name: file.name,\n        data: lychee.serialize(file.data)\n      };\n\n      this.multicast(data);\n\n    }\n\n  };\n\n\n  return Class;\n\n}"
				}
			},
			"lychee.net.Tunnel": {
				"constructor": "lychee.Definition",
				"arguments": [
					"lychee.net.Tunnel"
				],
				"blob": {
					"requires": [
						"lychee.data.BitON",
						"lychee.data.JSON",
						"lychee.net.Service"
					],
					"includes": [
						"lychee.event.Emitter"
					],
					"exports": "function (lychee, global, attachments) {\n\n\tvar _BitON = lychee.data.BitON;\n\tvar _JSON  = lychee.data.JSON;\n\n\n\n\t/*\n\t * HELPERS\n\t */\n\n\tvar _plug_service = function(id, service) {\n\n\t\tid = typeof id === 'string' ? id : null;\n\n\t\tif (id === null || service === null) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tvar found = false;\n\n\t\tfor (var w = 0, wl = this.__services.waiting.length; w < wl; w++) {\n\n\t\t\tif (this.__services.waiting[w] === service) {\n\t\t\t\tthis.__services.waiting.splice(w, 1);\n\t\t\t\tfound = true;\n\t\t\t\twl--;\n\t\t\t\tw--;\n\t\t\t}\n\n\t\t}\n\n\n\t\tif (found === true) {\n\n\t\t\tthis.__services.active.push(service);\n\n\t\t\tservice.trigger('plug', []);\n\n\t\t\tif (lychee.debug === true) {\n\t\t\t\tconsole.log('lychee.net.Tunnel: Remote plugged in Service (' + id + ')');\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tvar _unplug_service = function(id, service) {\n\n\t\tid = typeof id === 'string' ? id : null;\n\n\t\tif (id === null || service === null) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tvar found = false;\n\n\t\tfor (var w = 0, wl = this.__services.waiting.length; w < wl; w++) {\n\n\t\t\tif (this.__services.waiting[w] === service) {\n\t\t\t\tthis.__services.waiting.splice(w, 1);\n\t\t\t\tfound = true;\n\t\t\t\twl--;\n\t\t\t\tw--;\n\t\t\t}\n\n\t\t}\n\n\t\tfor (var a = 0, al = this.__services.active.length; a < al; a++) {\n\n\t\t\tif (this.__services.active[a] === service) {\n\t\t\t\tthis.__services.active.splice(a, 1);\n\t\t\t\tfound = true;\n\t\t\t\tal--;\n\t\t\t\ta--;\n\t\t\t}\n\n\t\t}\n\n\n\t\tif (found === true) {\n\n\t\t\tservice.trigger('unplug', []);\n\n\t\t\tif (lychee.debug === true) {\n\t\t\t\tconsole.log('lychee.net.Tunnel: Remote unplugged Service (' + id + ')');\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\n\n\t/*\n\t * IMPLEMENTATION\n\t */\n\n\tvar Class = function(data) {\n\n\t\tvar settings = lychee.extend({}, data);\n\n\n\t\tthis.port        = 1337;\n\t\tthis.host        = 'localhost';\n\t\tthis.binary      = false;\n\t\tthis.reconnect   = 0;\n\n\n\t\tthis.__codec     = lychee.interfaceof(_JSON, settings.codec) ? settings.codec : _JSON;\n\t\tthis.__services  = {\n\t\t\twaiting: [],\n\t\t\tactive:  []\n\t\t};\n\n\n\t\tthis.setHost(settings.host);\n\t\tthis.setPort(settings.port);\n\t\tthis.setBinary(settings.binary);\n\t\tthis.setReconnect(settings.reconnect);\n\n\n\t\tlychee.event.Emitter.call(this);\n\n\t\tsettings = null;\n\n\n\n\t\t/*\n\t\t * INITIALIZATION\n\t\t */\n\n\t\tthis.bind('disconnect', function() {\n\n\t\t\tfor (var a = 0, al = this.__services.active.length; a < al; a++) {\n\t\t\t\tthis.__services.active[a].trigger('unplug', []);\n\t\t\t}\n\n\t\t\tthis.__services.active  = [];\n\t\t\tthis.__services.waiting = [];\n\n\n\t\t\tif (this.reconnect > 0) {\n\n\t\t\t\tvar that = this;\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tthat.trigger('connect', []);\n\t\t\t\t}, this.reconnect);\n\n\t\t\t}\n\n\t\t}, this);\n\n\t};\n\n\n\tClass.STATUS = {\n\t\t1000: 'Normal Closure',\n\t\t1001: 'Going Away',\n\t\t1002: 'Protocol Error',\n\t\t1003: 'Unsupported Data',\n\t\t1005: 'No Status Received',\n\t\t1006: 'Abnormal Closure',\n\t\t1008: 'Policy Violation',\n\t\t1009: 'Message Too Big',\n\t\t1011: 'Internal Error',\n\t\t1012: 'Service Restart',\n\t\t1013: 'Try Again Later'\n\t};\n\n\n\tClass.prototype = {\n\n\t\t/*\n\t\t * ENTITY API\n\t\t */\n\n\t\t// deserialize: function(blob) {},\n\n\t\tserialize: function() {\n\n\t\t\tvar data = lychee.event.Emitter.prototype.serialize.call(this);\n\t\t\tdata['constructor'] = 'lychee.net.Tunnel';\n\n\t\t\tvar settings = {};\n\n\n\t\t\tif (this.binary !== false) settings.binary    = this.binary;\n\t\t\tif (this.reconnect !== 0)  settings.reconnect = this.reconnect;\n\n\n\t\t\t// TODO: Serialize services to data['blob']\n\n\n\t\t\tdata['arguments'][0] = settings;\n\n\n\t\t\treturn data;\n\n\t\t},\n\n\n\n\t\t/*\n\t\t * CUSTOM API\n\t\t */\n\n\t\tsend: function(data, service) {\n\n\t\t\tdata    = data instanceof Object    ? data    : null;\n\t\t\tservice = service instanceof Object ? service : null;\n\n\n\t\t\tif (data === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\n\t\t\tif (service !== null) {\n\n\t\t\t\tif (typeof service.id     === 'string') data._serviceId     = service.id;\n\t\t\t\tif (typeof service.event  === 'string') data._serviceEvent  = service.event;\n\t\t\t\tif (typeof service.method === 'string') data._serviceMethod = service.method;\n\n\t\t\t}\n\n\n\t\t\tvar blob = this.__codec.encode(data);\n\t\t\tif (blob !== null) {\n\n\t\t\t\tif (this.binary === true) {\n\n\t\t\t\t\tvar bl    = blob.length;\n\t\t\t\t\tvar bytes = new Uint8Array(bl);\n\n\t\t\t\t\tfor (var b = 0; b < bl; b++) {\n\t\t\t\t\t\tbytes[b] = blob.charCodeAt(b);\n\t\t\t\t\t}\n\n\t\t\t\t\tblob = bytes.buffer;\n\n\t\t\t\t}\n\n\n\t\t\t\tthis.trigger('send', [ blob ]);\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\treceive: function(blob) {\n\n\t\t\tif (this.binary === true) {\n\n\t\t\t\tvar bytes = new Uint8Array(blob);\n\t\t\t\tblob = String.fromCharCode.apply(null, bytes);\n\n\t\t\t}\n\n\n\t\t\tvar data = this.__codec.decode(blob);\n\t\t\tif (data instanceof Object && typeof data._serviceId === 'string') {\n\n\t\t\t\tvar service = this.getService(data._serviceId);\n\t\t\t\tvar event   = data._serviceEvent  || null;\n\t\t\t\tvar method  = data._serviceMethod || null;\n\n\n\t\t\t\tif (method !== null) {\n\n\t\t\t\t\tif (method.charAt(0) === '@') {\n\n\t\t\t\t\t\tif (method === '@plug') {\n\t\t\t\t\t\t\t_plug_service.call(this,   data._serviceId, service);\n\t\t\t\t\t\t} else if (method === '@unplug') {\n\t\t\t\t\t\t\t_unplug_service.call(this, data._serviceId, service);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if (service !== null && typeof service[method] === 'function') {\n\n\t\t\t\t\t\t// Remove data frame service header\n\t\t\t\t\t\tdelete data._serviceId;\n\t\t\t\t\t\tdelete data._serviceMethod;\n\n\t\t\t\t\t\tservice[method](data);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if (event !== null) {\n\n\t\t\t\t\tif (service !== null && typeof service.trigger === 'function') {\n\n\t\t\t\t\t\t// Remove data frame service header\n\t\t\t\t\t\tdelete data._serviceId;\n\t\t\t\t\t\tdelete data._serviceEvent;\n\n\t\t\t\t\t\tservice.trigger(event, [ data ]);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.trigger('receive', [ data ]);\n\n\t\t\t}\n\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tsetBinary: function(binary) {\n\n\t\t\tif (binary === true || binary === false) {\n\n\t\t\t\tthis.binary = binary;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tsetHost: function(host) {\n\n\t\t\thost = typeof host === 'string' ? host : null;\n\n\n\t\t\tif (host !== null) {\n\n\t\t\t\tthis.host = host;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tsetPort: function(port) {\n\n\t\t\tport = typeof port === 'number' ? (port | 0) : null;\n\n\n\t\t\tif (port !== null) {\n\n\t\t\t\tthis.port = port;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tsetReconnect: function(reconnect) {\n\n\t\t\treconnect = typeof reconnect === 'number' ? (reconnect | 0) : null;\n\n\n\t\t\tif (reconnect !== null) {\n\n\t\t\t\tthis.reconnect = reconnect;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\taddService: function(service) {\n\n\t\t\tservice = lychee.interfaceof(lychee.net.Service, service) ? service : null;\n\n\n\t\t\tif (service !== null) {\n\n\t\t\t\tvar found = false;\n\n\t\t\t\tfor (var w = 0, wl = this.__services.waiting.length; w < wl; w++) {\n\n\t\t\t\t\tif (this.__services.waiting[w] === service) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor (var a = 0, al = this.__services.active.length; a < al; a++) {\n\n\t\t\t\t\tif (this.__services.active[a] === service) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\tif (found === false) {\n\n\t\t\t\t\tthis.__services.waiting.push(service);\n\n\t\t\t\t\tthis.send({}, {\n\t\t\t\t\t\tid:     service.id,\n\t\t\t\t\t\tmethod: '@plug'\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tgetService: function(id) {\n\n\t\t\tid = typeof id === 'string' ? id : null;\n\n\n\t\t\tif (id !== null) {\n\n\t\t\t\tfor (var w = 0, wl = this.__services.waiting.length; w < wl; w++) {\n\n\t\t\t\t\tvar wservice = this.__services.waiting[w];\n\t\t\t\t\tif (wservice.id === id) {\n\t\t\t\t\t\treturn wservice;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor (var a = 0, al = this.__services.active.length; a < al; a++) {\n\n\t\t\t\t\tvar aservice = this.__services.active[a];\n\t\t\t\t\tif (aservice.id === id) {\n\t\t\t\t\t\treturn aservice;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tremoveService: function(service) {\n\n\t\t\tservice = lychee.interfaceof(lychee.net.Service, service) ? service : null;\n\n\n\t\t\tif (service !== null) {\n\n\t\t\t\tvar found = false;\n\n\t\t\t\tfor (var w = 0, wl = this.__services.waiting.length; w < wl; w++) {\n\n\t\t\t\t\tif (this.__services.waiting[w] === service) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor (var a = 0, al = this.__services.active.length; a < al; a++) {\n\n\t\t\t\t\tif (this.__services.active[a] === service) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\tif (found === true) {\n\n\t\t\t\t\tthis.send({}, {\n\t\t\t\t\t\tid:     service.id,\n\t\t\t\t\t\tmethod: '@unplug'\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}\n\n\t};\n\n\n\treturn Class;\n\n}"
				}
			},
			"lychee.data.JSON": {
				"constructor": "lychee.Definition",
				"arguments": [
					"lychee.data.JSON"
				],
				"blob": {
					"exports": "function (lychee, global) {\n\n\t/*\n\t * HELPERS\n\t */\n\n\tvar _Stream = function(buffer, mode) {\n\n\t\tthis.__buffer = typeof buffer === 'string' ? buffer : '';\n\t\tthis.__mode   = typeof mode === 'number'   ? mode   : 0;\n\n\t\tthis.__index  = 0;\n\n\t};\n\n\n\t_Stream.MODE = {\n\t\tread:  0,\n\t\twrite: 1\n\t};\n\n\n\t_Stream.prototype = {\n\n\t\ttoString: function() {\n\t\t\treturn this.__buffer;\n\t\t},\n\n\t\tpointer: function() {\n\t\t\treturn this.__index;\n\t\t},\n\n\t\tlength: function() {\n\t\t\treturn this.__buffer.length;\n\t\t},\n\n\t\tseek: function(array) {\n\n\t\t\tvar bytes = Infinity;\n\n\t\t\tfor (var a = 0, al = array.length; a < al; a++) {\n\n\t\t\t\tvar token = array[a];\n\t\t\t\tvar size  = this.__buffer.indexOf(token, this.__index + 1) - this.__index;\n\t\t\t\tif (size > -1 && size < bytes) {\n\t\t\t\t\tbytes = size;\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tif (bytes === Infinity) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\n\t\t\treturn bytes;\n\n\t\t},\n\n\t\tseekRAW: function(bytes) {\n\t\t\treturn this.__buffer.substr(this.__index, bytes);\n\t\t},\n\n\t\treadRAW: function(bytes) {\n\n\t\t\tvar buffer = '';\n\n\t\t\tbuffer       += this.__buffer.substr(this.__index, bytes);\n\t\t\tthis.__index += bytes;\n\n\t\t\treturn buffer;\n\n\t\t},\n\n\t\twriteRAW: function(buffer) {\n\n\t\t\tthis.__buffer += buffer;\n\t\t\tthis.__index  += buffer.length;\n\n\t\t}\n\n\t};\n\n\n\n\t/*\n\t * ENCODER and DECODER\n\t */\n\n\tvar _encode = function(stream, data) {\n\n\t\t// null,false,true: Boolean or Null or EOS\n\t\tif (typeof data === 'boolean' || data === null) {\n\n\t\t\tif (data === null) {\n\t\t\t\tstream.writeRAW('null');\n\t\t\t} else if (data === false) {\n\t\t\t\tstream.writeRAW('false');\n\t\t\t} else if (data === true) {\n\t\t\t\tstream.writeRAW('true');\n\t\t\t}\n\n\n\t\t// 123,12.3: Integer or Float\n\t\t} else if (typeof data === 'number') {\n\n\t\t\tvar type = 1;\n\t\t\tif (data < 268435456 && data !== (data | 0)) {\n\t\t\t\ttype = 2;\n\t\t\t}\n\n\n\t\t\t// Negative value\n\t\t\tvar sign = 0;\n\t\t\tif (data < 0) {\n\t\t\t\tdata = -data;\n\t\t\t\tsign = 1;\n\t\t\t}\n\n\n\t\t\tif (sign === 1) {\n\t\t\t\tstream.writeRAW('-');\n\t\t\t}\n\n\n\t\t\t// TODO: Find a better way to serialize Numbers\n\t\t\tif (type === 1) {\n\t\t\t\tstream.writeRAW('' + data.toString());\n\t\t\t} else {\n\t\t\t\tstream.writeRAW('' + data.toString());\n\t\t\t}\n\n\n\t\t// \"\": String\n\t\t} else if (typeof data === 'string') {\n\n\t\t\tstream.writeRAW('\"');\n\n\t\t\tstream.writeRAW(data.replace(/\\\\/g, '\\\\\\\\').replace('\"', '\\\\\"'));\n\n\t\t\tstream.writeRAW('\"');\n\n\n\t\t// []: Array\n\t\t} else if (data instanceof Array) {\n\n\t\t\tstream.writeRAW('[');\n\n\t\t\tfor (var d = 0, dl = data.length; d < dl; d++) {\n\n\t\t\t\t_encode(stream, data[d]);\n\n\t\t\t\tif (d < dl - 1) {\n\t\t\t\t\tstream.writeRAW(',');\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstream.writeRAW(']');\n\n\n\t\t// {}: Object\n\t\t} else if (data instanceof Object && typeof data.serialize !== 'function') {\n\n\t\t\tstream.writeRAW('{');\n\n\t\t\tvar keys = Object.keys(data);\n\n\t\t\tfor (var k = 0, kl = keys.length; k < kl; k++) {\n\n\t\t\t\tvar key = keys[k];\n\n\t\t\t\t_encode(stream, key);\n\t\t\t\tstream.writeRAW(':');\n\n\t\t\t\t_encode(stream, data[key]);\n\n\t\t\t\tif (k < kl - 1) {\n\t\t\t\t\tstream.writeRAW(',');\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstream.writeRAW('}');\n\n\n\t\t// Custom High-Level Implementation\n\t\t} else if (data instanceof Object && typeof data.serialize === 'function') {\n\n\t\t\tstream.writeRAW('%');\n\n\t\t\tvar blob = lychee.serialize(data);\n\n\t\t\t_encode(stream, blob);\n\n\t\t\tstream.writeRAW('%');\n\n\t\t}\n\n\t};\n\n\n\tvar _decode = function(stream) {\n\n\t\tvar value  = undefined;\n\t\tvar size   = 0;\n\t\tvar tmp    = 0;\n\t\tvar errors = 0;\n\t\tvar check  = null;\n\n\n\t\tif (stream.pointer() < stream.length()) {\n\n\t\t\tvar seek = stream.seekRAW(1);\n\n\n\t\t\t// null,false,true: Boolean or Null or EOS\n\t\t\tif (seek === 'n' || seek === 'f' || seek === 't') {\n\n\t\t\t\tif (stream.seekRAW(4) === 'null') {\n\t\t\t\t\tstream.readRAW(4);\n\t\t\t\t\tvalue = null;\n\t\t\t\t} else if (stream.seekRAW(5) === 'false') {\n\t\t\t\t\tstream.readRAW(5);\n\t\t\t\t\tvalue = false;\n\t\t\t\t} else if (stream.seekRAW(4) === 'true') {\n\t\t\t\t\tstream.readRAW(4);\n\t\t\t\t\tvalue = true;\n\t\t\t\t}\n\n\t\t\t} else if (!isNaN(parseInt(seek, 10))) {\n\n\t\t\t\tsize = stream.seek([ ',', ']', '}' ]);\n\n\t\t\t\tif (size > 0) {\n\n\t\t\t\t\ttmp = stream.readRAW(size);\n\n\t\t\t\t\tif (tmp.indexOf('.') !== -1) {\n\t\t\t\t\t\tvalue = parseFloat(tmp, 10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = parseInt(tmp, 10);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t// \"\": String\n\t\t\t} else if (seek === '\"') {\n\n\t\t\t\tstream.readRAW(1);\n\n\t\t\t\tsize = stream.seek([ '\\\\', '\"' ]);\n\n\t\t\t\tif (size > 0) {\n\t\t\t\t\tvalue = stream.readRAW(size);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\n\t\t\t\tcheck = stream.readRAW(1);\n\n\n\t\t\t\twhile (check === '\\\\') {\n\n\t\t\t\t\tvalue[value.length - 1] = check;\n\n\t\t\t\t\tsize   = stream.seek([ '\\\\', '\"' ]);\n\t\t\t\t\tvalue += stream.readRAW(size);\n\t\t\t\t\tcheck  = stream.readRAW(1);\n\n\t\t\t\t}\n\n\n\t\t\t// []: Array\n\t\t\t} else if (seek === '[') {\n\n\t\t\t\tvalue = [];\n\n\n\t\t\t\tstream.readRAW(1);\n\n\t\t\t\twhile (errors === 0) {\n\n\t\t\t\t\tvalue.push(_decode(stream));\n\n\t\t\t\t\tcheck = stream.seekRAW(1);\n\n\t\t\t\t\tif (check === ',') {\n\t\t\t\t\t\tstream.readRAW(1);\n\t\t\t\t\t} else if (check === ']') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors++;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstream.readRAW(1);\n\n\n\t\t\t// {}: Object\n\t\t\t} else if (seek === '{') {\n\n\t\t\t\tvalue = {};\n\n\n\t\t\t\tstream.readRAW(1);\n\n\t\t\t\twhile (errors === 0) {\n\n\t\t\t\t\tvar object_key = _decode(stream);\n\t\t\t\t\tstream.readRAW(1);\n\n\t\t\t\t\tvar object_value = _decode(stream);\n\t\t\t\t\tcheck = stream.seekRAW(1);\n\n\t\t\t\t\tvalue[object_key] = object_value;\n\n\t\t\t\t\tif (check === ',') {\n\t\t\t\t\t\tstream.readRAW(1);\n\t\t\t\t\t} else if (check === '}') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors++;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstream.readRAW(1);\n\n\t\t\t// %%: Custom High-Level Implementation\n\t\t\t} else if (seek === '%') {\n\n\t\t\t\tstream.readRAW(1);\n\n\t\t\t\tvar blob = _decode(stream);\n\n\t\t\t\tvalue = lychee.deserialize(blob);\n\t\t\t\tcheck = stream.readRAW(1);\n\n\t\t\t\tif (check !== '%') {\n\t\t\t\t\tvalue = undefined;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn value;\n\n\t};\n\n\n\n\t/*\n\t * IMPLEMENTATION\n\t */\n\n\tvar Module = {};\n\n\n\tModule.encode = function(data) {\n\n\t\tvar stream = new _Stream('', _Stream.MODE.write);\n\n\t\t_encode(stream, data);\n\n\t\treturn stream.toString();\n\n\t};\n\n\n\tModule.decode = function(data) {\n\n\t\tvar stream = new _Stream(data, _Stream.MODE.read);\n\n\t\tvar value = _decode(stream);\n\t\tif (value === undefined) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn value;\n\t\t}\n\n\t};\n\n\n\treturn Module;\n\n}"
				}
			},
			"lychee.event.Emitter": {
				"constructor": "lychee.Definition",
				"arguments": [
					"lychee.event.Emitter"
				],
				"blob": {
					"exports": "function (lychee, global) {\n\n\t/*\n\t * HELPERS\n\t */\n\n\tvar _bind = function(type, callback, scope, once) {\n\n\t\tif (type === null || callback === null) {\n\t\t\treturn false;\n\t\t}\n\n\n\t\tvar passAction = false;\n\t\tvar passSelf   = false;\n\n\t\tif (type.charAt(0) === '@') {\n\t\t\ttype = type.substr(1, type.length - 1);\n\t\t\tpassAction = true;\n\t\t} else if (type.charAt(0) === '#') {\n\t\t\ttype = type.substr(1, type.length - 1);\n\t\t\tpassSelf = true;\n\t\t}\n\n\n\t\tif (this.___events[type] === undefined) {\n\t\t\tthis.___events[type] = [];\n\t\t}\n\n\n\t\tthis.___events[type].push({\n\t\t\tpassAction: passAction,\n\t\t\tpassSelf:   passSelf,\n\t\t\tcallback:   callback,\n\t\t\tscope:      scope,\n\t\t\tonce:       once\n\t\t});\n\n\n\t\treturn true;\n\n\t};\n\n\tvar _trigger = function(type, data) {\n\n\t\tif (this.___events[type] !== undefined) {\n\n\t\t\tvar value = undefined;\n\n\t\t\tfor (var e = 0; e < this.___events[type].length; e++) {\n\n\t\t\t\tvar args  = [];\n\t\t\t\tvar entry = this.___events[type][e];\n\n\t\t\t\tif (entry.passAction === true) {\n\n\t\t\t\t\targs.push(type);\n\t\t\t\t\targs.push(this);\n\n\t\t\t\t} else if (entry.passSelf === true) {\n\n\t\t\t\t\targs.push(this);\n\n\t\t\t\t}\n\n\n\t\t\t\tif (data !== null) {\n\t\t\t\t\targs.push.apply(args, data);\n\t\t\t\t}\n\n\n\t\t\t\tvar result = entry.callback.apply(entry.scope, args);\n\t\t\t\tif (result !== undefined) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\n\n\t\t\t\tif (entry.once === true) {\n\n\t\t\t\t\tif (this.unbind(type, entry.callback, entry.scope) === true) {\n\t\t\t\t\t\te--;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn false;\n\n\t};\n\n\tvar _unbind = function(type, callback, scope) {\n\n\t\tvar found = false;\n\n\t\tif (type !== null) {\n\n\t\t\tfound = _unbind_event.call(this, type, callback, scope);\n\n\t\t} else {\n\n\t\t\tfor (type in this.___events) {\n\n\t\t\t\tvar result = _unbind_event.call(this, type, callback, scope);\n\t\t\t\tif (result === true) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn found;\n\n\t};\n\n\tvar _unbind_event = function(type, callback, scope) {\n\n\t\tif (this.___events[type] !== undefined) {\n\n\t\t\tvar found = false;\n\n\t\t\tfor (var e = 0, el = this.___events[type].length; e < el; e++) {\n\n\t\t\t\tvar entry = this.___events[type][e];\n\n\t\t\t\tif ((callback === null || entry.callback === callback) && (scope === null || entry.scope === scope)) {\n\n\t\t\t\t\tfound = true;\n\n\t\t\t\t\tthis.___events[type].splice(e, 1);\n\t\t\t\t\tel--;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn found;\n\n\t\t}\n\n\n\t\treturn false;\n\n\t};\n\n\n\tif (lychee.debug === true) {\n\n\t\tvar _original_bind    = _bind;\n\t\tvar _original_trigger = _trigger;\n\t\tvar _original_unbind  = _unbind;\n\n\n\t\t_bind = function(type, callback, scope, once) {\n\n\t\t\tvar result = _original_bind.call(this, type, callback, scope, once);\n\t\t\tif (result !== false) {\n\n\t\t\t\tthis.___timeline.bind.push({\n\t\t\t\t\ttime:     Date.now(),\n\t\t\t\t\ttype:     type,\n\t\t\t\t\tcallback: lychee.serialize(callback),\n\t\t\t\t\t// scope:    lychee.serialize(scope),\n\t\t\t\t\tonce:     once\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t};\n\n\t\t_trigger = function(type, data) {\n\n\t\t\tvar result = _original_trigger.call(this, type, data);\n\t\t\tif (result !== false) {\n\n\t\t\t\tthis.___timeline.trigger.push({\n\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\ttype: type,\n\t\t\t\t\tdata: lychee.serialize(data)\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t};\n\n\t\t_unbind = function(type, callback, scope) {\n\n\t\t\tvar result = _original_unbind.call(this, type, callback, scope);\n\t\t\tif (result !== false) {\n\n\t\t\t\tthis.___timeline.unbind.push({\n\t\t\t\t\ttime:     Date.now(),\n\t\t\t\t\ttype:     type,\n\t\t\t\t\tcallback: lychee.serialize(callback),\n\t\t\t\t\tscope:    lychee.serialize(scope)\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}\n\n\n\n\t/*\n\t * IMPLEMENTATION\n\t */\n\n\tvar Class = function() {\n\n\t\tthis.___events   = {};\n\t\tthis.___timeline = {\n\t\t\tbind:    [],\n\t\t\ttrigger: [],\n\t\t\tunbind:  []\n\t\t};\n\n\t};\n\n\n\tClass.prototype = {\n\n\t\t/*\n\t\t * ENTITY API\n\t\t */\n\n\t\t// deserialize: function(blob) {},\n\n\t\tserialize: function() {\n\n\t\t\tvar blob = {};\n\n\n\t\t\tif (this.___timeline.bind.length > 0 || this.___timeline.trigger.length > 0 || this.___timeline.unbind.length > 0) {\n\n\t\t\t\tblob.timeline = {};\n\n\n\t\t\t\tif (this.___timeline.bind.length > 0) {\n\n\t\t\t\t\tblob.timeline.bind = [];\n\n\t\t\t\t\tfor (var b = 0, bl = this.___timeline.bind.length; b < bl; b++) {\n\t\t\t\t\t\tblob.timeline.bind.push(this.___timeline.bind[b]);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif (this.___timeline.trigger.length > 0) {\n\n\t\t\t\t\tblob.timeline.trigger = [];\n\n\t\t\t\t\tfor (var t = 0, tl = this.___timeline.trigger.length; t < tl; t++) {\n\t\t\t\t\t\tblob.timeline.trigger.push(this.___timeline.trigger[t]);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif (this.___timeline.unbind.length > 0) {\n\n\t\t\t\t\tblob.timeline.unbind = [];\n\n\t\t\t\t\tfor (var u = 0, ul = this.___timeline.unbind.length; u < ul; u++) {\n\t\t\t\t\t\tblob.timeline.unbind.push(this.___timeline.unbind[u]);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn {\n\t\t\t\t'constructor': 'lychee.event.Emitter',\n\t\t\t\t'arguments':   [],\n\t\t\t\t'blob':        Object.keys(blob).length > 0 ? blob : null\n\t\t\t};\n\n\t\t},\n\n\n\n\t\t/*\n\t\t * CUSTOM API\n\t\t */\n\n\t\tbind: function(type, callback, scope, once) {\n\n\t\t\ttype     = typeof type === 'string'     ? type     : null;\n\t\t\tcallback = callback instanceof Function ? callback : null;\n\t\t\tscope    = scope !== undefined          ? scope    : this;\n\t\t\tonce     = once === true;\n\n\n\t\t\treturn _bind.call(this, type, callback, scope, once);\n\n\t\t},\n\n\t\ttrigger: function(type, data) {\n\n\t\t\ttype = typeof type === 'string' ? type : null;\n\t\t\tdata = data instanceof Array    ? data : null;\n\n\n\t\t\treturn _trigger.call(this, type, data);\n\n\t\t},\n\n\t\tunbind: function(type, callback, scope) {\n\n\t\t\ttype     = typeof type === 'string'     ? type     : null;\n\t\t\tcallback = callback instanceof Function ? callback : null;\n\t\t\tscope    = scope !== undefined          ? scope    : null;\n\n\n\t\t\treturn _unbind.call(this, type, callback, scope);\n\n\t\t}\n\n\t};\n\n\n\treturn Class;\n\n}"
				}
			},
			"lychee.net.client.Session": {
				"constructor": "lychee.Definition",
				"arguments": [
					"lychee.net.client.Session"
				],
				"blob": {
					"includes": [
						"lychee.net.Service"
					],
					"exports": "function (lychee, global, attachments) {\n\n\t/*\n\t * HELPERS\n\t */\n\n\tvar _id = 0;\n\n\n\n\t/*\n\t * IMPLEMENTATION\n\t */\n\n\tvar Class = function(id, client, data) {\n\n\t\tid = typeof id === 'string' ? id : 'session';\n\n\n\t\tvar settings = lychee.extend({}, data);\n\n\n\t\tthis.admin     = false;\n\t\tthis.autoadmin = true;\n\t\tthis.autolock  = true;\n\t\tthis.autostart = true;\n\t\tthis.sid       = 'session-' + _id++;\n\t\tthis.tid       = null;\n\t\tthis.min       = 2;\n\t\tthis.max       = 4;\n\n\n\t\tthis.setAutoadmin(settings.autoadmin);\n\t\tthis.setAutolock(settings.autolock);\n\t\tthis.setAutostart(settings.autostart);\n\t\tthis.setSid(settings.sid);\n\t\tthis.setMin(settings.min);\n\t\tthis.setMax(settings.max);\n\n\t\tdelete settings.autolock;\n\t\tdelete settings.autostart;\n\t\tdelete settings.sid;\n\t\tdelete settings.min;\n\t\tdelete settings.max;\n\n\n\t\tlychee.net.Service.call(this, id, client, lychee.net.Service.TYPE.client);\n\n\n\n\t\t/*\n\t\t * INITIALIZATION\n\t\t */\n\n\t\tthis.bind('sync', function(data) {\n\n\t\t\tvar type = data.type;\n\t\t\tif (type === 'update') {\n\n\t\t\t\tthis.admin = data.admin;\n\t\t\t\tthis.sid   = data.sid;\n\t\t\t\tthis.min   = data.min;\n\t\t\t\tthis.max   = data.max;\n\n\t\t\t}\n\n\n\t\t\tif (type === 'update' || type === 'start' || type === 'stop') {\n\n\t\t\t\tdelete data.type;\n\n\t\t\t\tthis.trigger(type, [ data ]);\n\n\t\t\t}\n\n\t\t}, this);\n\n\n\t\tif (lychee.debug === true) {\n\n\t\t\tthis.bind('error', function(error) {\n\t\t\t\tconsole.error('lychee.net.client.Session: ' + error.message);\n\t\t\t}, this);\n\n\t\t}\n\n\n\t\tsettings = null;\n\n\t};\n\n\n\tClass.prototype = {\n\n\t\t/*\n\t\t * CUSTOM API\n\t\t */\n\n\t\tjoin: function() {\n\n\t\t\tif (this.sid !== null) {\n\n\t\t\t\tif (this.tunnel !== null) {\n\n\t\t\t\t\tif (lychee.debug === true) {\n\t\t\t\t\t\tconsole.log('lychee.net.client.Session: Joining session \"' + this.sid + '\"');\n\t\t\t\t\t}\n\n\n\t\t\t\t\tthis.tunnel.send({\n\t\t\t\t\t\tautoadmin: this.autoadmin,\n\t\t\t\t\t\tautolock:  this.autolock,\n\t\t\t\t\t\tautostart: this.autostart,\n\t\t\t\t\t\tsid:       this.sid,\n\t\t\t\t\t\tmin:       this.min,\n\t\t\t\t\t\tmax:       this.max\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid:    this.id,\n\t\t\t\t\t\tevent: 'join'\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tstart: function() {\n\n\t\t\tif (this.sid !== null) {\n\n\t\t\t\tif (this.tunnel !== null) {\n\n\t\t\t\t\tthis.tunnel.send({\n\t\t\t\t\t\tsid: this.sid\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid:    this.id,\n\t\t\t\t\t\tevent: 'start'\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tstop: function() {\n\n\t\t\tif (this.sid !== null) {\n\n\t\t\t\tif (this.tunnel !== null) {\n\n\t\t\t\t\tthis.tunnel.send({\n\t\t\t\t\t\tsid: this.sid\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid:    this.id,\n\t\t\t\t\t\tevent: 'stop'\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tleave: function() {\n\n\t\t\tif (this.sid !== null) {\n\n\t\t\t\tif (this.tunnel !== null) {\n\n\t\t\t\t\tif (lychee.debug === true) {\n\t\t\t\t\t\tconsole.log('lychee.net.client.Session: Leaving session \"' + this.sid + '\"');\n\t\t\t\t\t}\n\n\n\t\t\t\t\tthis.tunnel.send({\n\t\t\t\t\t\tsid:   this.sid\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid:    this.id,\n\t\t\t\t\t\tevent: 'leave'\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetAutoadmin: function(autoadmin) {\n\n\t\t\tif (autoadmin === true || autoadmin === false) {\n\n\t\t\t\tthis.autoadmin = autoadmin;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tsetAutolock: function(autolock) {\n\n\t\t\tif (autolock === true || autolock === false) {\n\n\t\t\t\tthis.autolock = autolock;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tsetAutostart: function(autostart) {\n\n\t\t\tif (autostart === true || autostart === false) {\n\n\t\t\t\tthis.autostart = autostart;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tsetSid: function(sid) {\n\n\t\t\tsid = typeof sid === 'string' ? sid : null;\n\n\n\t\t\tif (sid !== null) {\n\n\t\t\t\tthis.sid = sid;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tsetMax: function(max) {\n\n\t\t\tmax = typeof max === 'number' ? max : null;\n\n\n\t\t\tif (max !== null) {\n\n\t\t\t\tthis.max = max;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tsetMin: function(min) {\n\n\t\t\tmin = typeof min === 'number' ? min : null;\n\n\n\t\t\tif (min !== null) {\n\n\t\t\t\tthis.min = min;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}\n\n\t};\n\n\n\treturn Class;\n\n}"
				}
			},
			"lychee.net.Service": {
				"constructor": "lychee.Definition",
				"arguments": [
					"lychee.net.Service"
				],
				"blob": {
					"includes": [
						"lychee.event.Emitter"
					],
					"exports": "function (lychee, global, attachments) {\n\n\t/*\n\t * HELPERS\n\t */\n\n\tvar _services = {};\n\n\tvar _plug_broadcast = function() {\n\n\t\tvar id = this.id;\n\t\tif (id !== null) {\n\n\t\t\tvar cache = _services[id] || null;\n\t\t\tif (cache === null) {\n\t\t\t\tcache = _services[id] = [];\n\t\t\t}\n\n\n\t\t\tvar found = false;\n\n\t\t\tfor (var c = 0, cl = cache.length; c < cl; c++) {\n\n\t\t\t\tif (cache[c] === this) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tif (found === false) {\n\t\t\t\tcache.push(this);\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tvar _unplug_broadcast = function() {\n\n\t\tthis.setMulticast([]);\n\n\n\t\tvar id = this.id;\n\t\tif (id !== null) {\n\n\t\t\tvar cache = _services[id] || null;\n\t\t\tif (cache !== null) {\n\n\t\t\t\tfor (var c = 0, cl = cache.length; c < cl; c++) {\n\n\t\t\t\t\tif (cache[c] === this) {\n\t\t\t\t\t\tcache.splice(c, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\n\n\t/*\n\t * IMPLEMENTATION\n\t */\n\n\tvar Class = function(id, tunnel, type) {\n\n\t\tid     = typeof id === 'string'                        ? id     : null;\n\t\ttunnel = lychee.interfaceof(lychee.net.Tunnel, tunnel) ? tunnel : null;\n\t\ttype   = lychee.enumof(Class.TYPE, type)               ? type   : null;\n\n\n\t\tthis.id     = id;\n\t\tthis.tunnel = tunnel;\n\t\tthis.type   = type;\n\n\t\tthis.__multicast = [];\n\n\n\t\tif (lychee.debug === true) {\n\n\t\t\tif (this.id === null) {\n\t\t\t\tconsole.error('lychee.net.Service: Invalid (string) id. It has to be kept in sync with the lychee.net.Client and lychee.net.Remote instance.');\n\t\t\t}\n\n\t\t\tif (this.tunnel === null) {\n\t\t\t\tconsole.error('lychee.net.Service: Invalid (lychee.net.Tunnel) tunnel.');\n\t\t\t}\n\n\t\t\tif (this.type === null) {\n\t\t\t\tconsole.error('lychee.net.Service: Invalid (lychee.net.Service.TYPE) type.');\n\t\t\t}\n\n\t\t}\n\n\n\t\tlychee.event.Emitter.call(this);\n\n\n\n\t\t/*\n\t\t * INITIALIZATION\n\t\t */\n\n\t\tif (this.type === Class.TYPE.remote) {\n\n\t\t\tthis.bind('plug',   _plug_broadcast,   this);\n\t\t\tthis.bind('unplug', _unplug_broadcast, this);\n\n\t\t}\n\n\t};\n\n\n\tClass.TYPE = {\n\t\t// 'default': 0, (deactivated)\n\t\t'client': 1,\n\t\t'remote': 2\n\t};\n\n\n\tClass.prototype = {\n\n\t\t/*\n\t\t * ENTITY API\n\t\t */\n\n\t\tdeserialize: function(blob) {\n\n\t\t\tif (blob.tunnel instanceof Object) {\n\t\t\t\tthis.tunnel = lychee.deserialize(blob.tunnel);\n\t\t\t}\n\n\t\t},\n\n\t\tserialize: function() {\n\n\t\t\tvar data = lychee.event.Emitter.prototype.serialize.call(this);\n\t\t\tdata['constructor'] = 'lychee.net.Service';\n\n\t\t\tvar id     = null;\n\t\t\tvar tunnel = null;\n\t\t\tvar type   = null;\n\t\t\tvar blob   = data['blob'] || {};\n\n\n\t\t\tif (this.id !== null)     id = this.id;\n\t\t\tif (this.tunnel !== null) blob.tunnel = lychee.serialize(this.tunnel);\n\t\t\tif (this.type !== null)   type = this.type;\n\n\n\t\t\tdata['arguments'][0] = id;\n\t\t\tdata['arguments'][1] = null;\n\t\t\tdata['arguments'][2] = type;\n\t\t\tdata['blob']         = Object.keys(blob).length > 0 ? blob : null;\n\n\n\t\t\treturn data;\n\n\t\t},\n\n\n\n\t\t/*\n\t\t * SERVICE API\n\t\t */\n\n\t\tmulticast: function(data, service) {\n\n\t\t\tdata    = data instanceof Object    ? data    : null;\n\t\t\tservice = service instanceof Object ? service : null;\n\n\n\t\t\tif (data === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\n\t\t\tvar type = this.type;\n\t\t\tif (type === Class.TYPE.client) {\n\n\t\t\t\tif (service === null) {\n\n\t\t\t\t\tservice = {\n\t\t\t\t\t\tid:    this.id,\n\t\t\t\t\t\tevent: 'multicast'\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\n\t\t\t\tif (this.tunnel !== null) {\n\n\t\t\t\t\tthis.tunnel.send({\n\t\t\t\t\t\tdata:    data,\n\t\t\t\t\t\tservice: service\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid:     this.id,\n\t\t\t\t\t\tmethod: 'multicast'\n\t\t\t\t\t});\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else if (type === Class.TYPE.remote) {\n\n\t\t\t\tif (data.service !== null) {\n\n\t\t\t\t\tfor (var m = 0, ml = this.__multicast.length; m < ml; m++) {\n\n\t\t\t\t\t\tvar tunnel = this.__multicast[m];\n\t\t\t\t\t\tif (tunnel !== this.tunnel) {\n\n\t\t\t\t\t\t\tdata.data.tid = this.tunnel.host + ':' + this.tunnel.port;\n\n\t\t\t\t\t\t\ttunnel.send(\n\t\t\t\t\t\t\t\tdata.data,\n\t\t\t\t\t\t\t\tdata.service\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tbroadcast: function(data, service) {\n\n\t\t\tdata    = data instanceof Object    ? data    : null;\n\t\t\tservice = service instanceof Object ? service : null;\n\n\n\t\t\tif (data === null || this.id === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\n\t\t\tvar type = this.type;\n\t\t\tif (type === Class.TYPE.client) {\n\n\t\t\t\tif (service === null) {\n\n\t\t\t\t\tservice = {\n\t\t\t\t\t\tid:    this.id,\n\t\t\t\t\t\tevent: 'broadcast'\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\n\t\t\t\tif (this.tunnel !== null) {\n\n\t\t\t\t\tthis.tunnel.send({\n\t\t\t\t\t\tdata:    data,\n\t\t\t\t\t\tservice: service\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid:     this.id,\n\t\t\t\t\t\tmethod: 'broadcast'\n\t\t\t\t\t});\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else if (type === Class.TYPE.remote) {\n\n\t\t\t\tif (data.service !== null) {\n\n\t\t\t\t\tvar broadcast = _services[this.id] || null;\n\t\t\t\t\tif (broadcast !== null) {\n\n\t\t\t\t\t\tfor (var b = 0, bl = broadcast.length; b < bl; b++) {\n\n\t\t\t\t\t\t\tvar tunnel = broadcast[b].tunnel;\n\t\t\t\t\t\t\tif (tunnel !== this.tunnel) {\n\n\t\t\t\t\t\t\t\tdata.data.tid = this.tunnel.host + ':' + this.tunnel.port;\n\n\t\t\t\t\t\t\t\ttunnel.send(\n\t\t\t\t\t\t\t\t\tdata.data,\n\t\t\t\t\t\t\t\t\tdata.service\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\treport: function(message, blob) {\n\n\t\t\tmessage = typeof message === 'string' ? message : null;\n\t\t\tblob    = blob instanceof Object      ? blob    : null;\n\n\n\t\t\tif (message !== null) {\n\n\t\t\t\tif (this.tunnel !== null) {\n\n\t\t\t\t\tthis.tunnel.send({\n\t\t\t\t\t\tmessage: message,\n\t\t\t\t\t\tblob:    blob\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid:    this.id,\n\t\t\t\t\t\tevent: 'error'\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetMulticast: function(multicast) {\n\n\t\t\tif (multicast instanceof Array) {\n\n\t\t\t\tvar valid = true;\n\t\t\t\tvar type  = this.type;\n\n\t\t\t\tfor (var m = 0, ml = multicast.length; m < ml; m++) {\n\n\t\t\t\t\tif (lychee.interfaceof(lychee.net.Tunnel, multicast[m]) === false) {\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.__multicast = multicast;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}\n\n\t};\n\n\n\treturn Class;\n\n}"
				}
			}
		},
		"packages": [
			{
				"constructor": "lychee.Package",
				"arguments": [
					"game",
					"/projects/bionet/biolib/lychee.pkg"
				]
			},
			{
				"constructor": "lychee.Package",
				"arguments": [
					"lychee",
					"/lychee/lychee.pkg"
				]
			}
		],
		"type": "build",
		"build": "game.net.Client"
	}
}